swagger: "2.0"
info:
    title: Mailing List Service
    description: Service for managing mailing lists in LFX
    version: 0.0.1
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /groupsio/services:
        post:
            tags:
                - mailing-list
            summary: create-grpsio-service mailing-list
            description: Create GroupsIO service with type-specific validation rules
            operationId: mailing-list#create-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
                - name: Create-Grpsio-ServiceRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/MailingListCreateGrpsioServiceRequestBody'
                    required:
                        - type
                        - project_uid
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/ServiceFull'
                        required:
                            - type
                            - project_uid
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/BadRequestError'
                        required:
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/NotFoundError'
                        required:
                            - message
                "409":
                    description: Conflict response.
                    schema:
                        $ref: '#/definitions/ConflictError'
                        required:
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /groupsio/services/{uid}:
        get:
            tags:
                - mailing-list
            summary: get-grpsio-service mailing-list
            description: Get groupsIO service details by ID
            operationId: mailing-list#get-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: uid
                  in: path
                  description: Service UID -- unique identifier for the service
                  required: true
                  type: string
                  format: uuid
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/MailingListGetGrpsioServiceResponseBody'
                        required:
                            - type
                            - project_uid
                    headers:
                        ETag:
                            description: ETag header value
                            type: string
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/BadRequestError'
                        required:
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/NotFoundError'
                        required:
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - mailing-list
            summary: update-grpsio-service mailing-list
            description: Update GroupsIO service
            operationId: mailing-list#update-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: uid
                  in: path
                  description: Service UID -- unique identifier for the service
                  required: true
                  type: string
                  format: uuid
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
                - name: If-Match
                  in: header
                  description: If-Match header value for conditional requests
                  required: false
                  type: string
                - name: Update-Grpsio-ServiceRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/MailingListUpdateGrpsioServiceRequestBody'
                    required:
                        - type
                        - project_uid
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ServiceWithReadonlyAttributes'
                        required:
                            - type
                            - project_uid
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/BadRequestError'
                        required:
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/NotFoundError'
                        required:
                            - message
                "409":
                    description: Conflict response.
                    schema:
                        $ref: '#/definitions/ConflictError'
                        required:
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        delete:
            tags:
                - mailing-list
            summary: delete-grpsio-service mailing-list
            description: Delete GroupsIO service
            operationId: mailing-list#delete-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  required: false
                  type: string
                  enum:
                    - "1"
                - name: uid
                  in: path
                  description: Service UID -- unique identifier for the service
                  required: true
                  type: string
                  format: uuid
                - name: Authorization
                  in: header
                  description: JWT token issued by Heimdall
                  required: false
                  type: string
                - name: If-Match
                  in: header
                  description: If-Match header value for conditional requests
                  required: false
                  type: string
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/BadRequestError'
                        required:
                            - message
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/NotFoundError'
                        required:
                            - message
                "409":
                    description: Conflict response.
                    schema:
                        $ref: '#/definitions/ConflictError'
                        required:
                            - message
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/InternalServerError'
                        required:
                            - message
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - message
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
    /livez:
        get:
            tags:
                - mailing-list
            summary: livez mailing-list
            description: Check if the service is alive.
            operationId: mailing-list#livez
            produces:
                - text/plain
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                        format: byte
            schemes:
                - http
    /openapi.json:
        get:
            tags:
                - mailing-list
            summary: Download gen/http/openapi3.json
            operationId: mailing-list#/openapi.json
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
    /readyz:
        get:
            tags:
                - mailing-list
            summary: readyz mailing-list
            description: Check if the service is able to take inbound requests.
            operationId: mailing-list#readyz
            produces:
                - text/plain
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                        format: byte
                "503":
                    description: Service Unavailable response.
                    schema:
                        $ref: '#/definitions/ServiceUnavailableError'
                        required:
                            - message
            schemes:
                - http
definitions:
    BadRequestError:
        title: BadRequestError
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: The request was invalid.
        description: Bad request - Invalid type, missing required fields, or validation failures
        example:
            message: The request was invalid.
        required:
            - message
    ConflictError:
        title: ConflictError
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: The resource already exists.
        description: Conflict
        example:
            message: The resource already exists.
        required:
            - message
    InternalServerError:
        title: InternalServerError
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: An internal server error occurred.
        description: Internal server error
        example:
            message: An internal server error occurred.
        required:
            - message
    MailingListCreateGrpsioServiceRequestBody:
        title: MailingListCreateGrpsioServiceRequestBody
        type: object
        properties:
            auditors:
                type: array
                items:
                    type: string
                    example: Eos et quas animi qui aut.
                description: Auditor user IDs who can audit this service
                example:
                    - auditor_user_id1
                    - auditor_user_id2
            domain:
                type: string
                description: Service domain
                example: lists.project.org
            global_owners:
                type: array
                items:
                    type: string
                    example: edwardo@mohr.biz
                    format: email
                description: List of global owner email addresses (required for primary, forbidden for shared)
                example:
                    - admin@example.com
            group_id:
                type: integer
                description: GroupsIO group ID
                example: 12345
                format: int64
            group_name:
                type: string
                description: GroupsIO group name
                example: project-name
            prefix:
                type: string
                description: Email prefix (required for formation and shared, forbidden for primary)
                example: formation
            project_slug:
                type: string
                description: Project slug identifier
                example: cncf
                format: regexp
                pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
            project_uid:
                type: string
                description: LFXv2 Project UID
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                format: uuid
            public:
                type: boolean
                description: Whether the service is publicly accessible
                default: false
                example: true
            status:
                type: string
                description: Service status
                example: created
            type:
                type: string
                description: Service type
                example: primary
                enum:
                    - primary
                    - formation
                    - shared
            url:
                type: string
                description: Service URL
                example: https://lists.project.org
                format: uri
            writers:
                type: array
                items:
                    type: string
                    example: Ut odit consequuntur aliquam velit quia hic.
                description: Manager user IDs who can edit/modify this service
                example:
                    - manager_user_id1
                    - manager_user_id2
        example:
            auditors:
                - auditor_user_id1
                - auditor_user_id2
            domain: lists.project.org
            global_owners:
                - admin@example.com
            group_id: 12345
            group_name: project-name
            prefix: formation
            project_slug: cncf
            project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public: true
            status: created
            type: primary
            url: https://lists.project.org
            writers:
                - manager_user_id1
                - manager_user_id2
        required:
            - type
            - project_uid
    MailingListGetGrpsioServiceResponseBody:
        title: MailingListGetGrpsioServiceResponseBody
        $ref: '#/definitions/ServiceWithReadonlyAttributes'
    MailingListUpdateGrpsioServiceRequestBody:
        title: MailingListUpdateGrpsioServiceRequestBody
        type: object
        properties:
            auditors:
                type: array
                items:
                    type: string
                    example: At molestiae repellat.
                description: Auditor user IDs who can audit this service
                example:
                    - auditor_user_id1
                    - auditor_user_id2
            domain:
                type: string
                description: Service domain
                example: lists.project.org
            global_owners:
                type: array
                items:
                    type: string
                    example: carol@nienowmraz.org
                    format: email
                description: List of global owner email addresses (required for primary, forbidden for shared)
                example:
                    - admin@example.com
            group_id:
                type: integer
                description: GroupsIO group ID
                example: 12345
                format: int64
            group_name:
                type: string
                description: GroupsIO group name
                example: project-name
            prefix:
                type: string
                description: Email prefix (required for formation and shared, forbidden for primary)
                example: formation
            project_slug:
                type: string
                description: Project slug identifier
                example: cncf
                format: regexp
                pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
            project_uid:
                type: string
                description: LFXv2 Project UID
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                format: uuid
            public:
                type: boolean
                description: Whether the service is publicly accessible
                default: false
                example: true
            status:
                type: string
                description: Service status
                example: created
            type:
                type: string
                description: Service type
                example: primary
                enum:
                    - primary
                    - formation
                    - shared
            url:
                type: string
                description: Service URL
                example: https://lists.project.org
                format: uri
            writers:
                type: array
                items:
                    type: string
                    example: Dolorem nisi dolorem.
                description: Manager user IDs who can edit/modify this service
                example:
                    - manager_user_id1
                    - manager_user_id2
        example:
            auditors:
                - auditor_user_id1
                - auditor_user_id2
            domain: lists.project.org
            global_owners:
                - admin@example.com
            group_id: 12345
            group_name: project-name
            prefix: formation
            project_slug: cncf
            project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public: true
            status: created
            type: primary
            url: https://lists.project.org
            writers:
                - manager_user_id1
                - manager_user_id2
        required:
            - type
            - project_uid
    NotFoundError:
        title: NotFoundError
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: The resource was not found.
        description: Resource not found
        example:
            message: The resource was not found.
        required:
            - message
    ServiceFull:
        title: ServiceFull
        type: object
        properties:
            auditors:
                type: array
                items:
                    type: string
                    example: Sapiente quo eveniet iusto sit aperiam neque.
                description: Auditor user IDs who can audit this service
                example:
                    - auditor_user_id1
                    - auditor_user_id2
            created_at:
                type: string
                description: The timestamp when the service was created (read-only)
                example: "2023-01-15T10:30:00Z"
                format: date-time
            domain:
                type: string
                description: Service domain
                example: lists.project.org
            global_owners:
                type: array
                items:
                    type: string
                    example: nicholas.dickinson@welch.name
                    format: email
                description: List of global owner email addresses (required for primary, forbidden for shared)
                example:
                    - admin@example.com
            group_id:
                type: integer
                description: GroupsIO group ID
                example: 12345
                format: int64
            group_name:
                type: string
                description: GroupsIO group name
                example: project-name
            last_audited_by:
                type: string
                description: The user ID who last audited the service
                example: user_id_12345
            last_audited_time:
                type: string
                description: The timestamp when the service was last audited
                example: "2023-05-10T09:15:00Z"
                format: date-time
            last_reviewed_at:
                type: string
                description: The timestamp when the service was last reviewed in RFC3339 format
                example: "2025-08-04T09:00:00Z"
                format: date-time
            last_reviewed_by:
                type: string
                description: The user ID who last reviewed this service
                example: user_id_12345
            prefix:
                type: string
                description: Email prefix (required for formation and shared, forbidden for primary)
                example: formation
            project_name:
                type: string
                description: Project name (read-only)
                example: Cloud Native Computing Foundation
            project_slug:
                type: string
                description: Project slug identifier
                example: cncf
                format: regexp
                pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
            project_uid:
                type: string
                description: LFXv2 Project UID
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                format: uuid
            public:
                type: boolean
                description: Whether the service is publicly accessible
                default: false
                example: true
            status:
                type: string
                description: Service status
                example: created
            type:
                type: string
                description: Service type
                example: primary
                enum:
                    - primary
                    - formation
                    - shared
            uid:
                type: string
                description: Service UID -- unique identifier for the service
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                format: uuid
            updated_at:
                type: string
                description: The timestamp when the service was last updated (read-only)
                example: "2023-06-20T14:45:30Z"
                format: date-time
            url:
                type: string
                description: Service URL
                example: https://lists.project.org
                format: uri
            writers:
                type: array
                items:
                    type: string
                    example: Porro aliquam esse odit nemo.
                description: Manager user IDs who can edit/modify this service
                example:
                    - manager_user_id1
                    - manager_user_id2
        example:
            auditors:
                - auditor_user_id1
                - auditor_user_id2
            created_at: "2023-01-15T10:30:00Z"
            domain: lists.project.org
            global_owners:
                - admin@example.com
            group_id: 12345
            group_name: project-name
            last_audited_by: user_id_12345
            last_audited_time: "2023-05-10T09:15:00Z"
            last_reviewed_at: "2025-08-04T09:00:00Z"
            last_reviewed_by: user_id_12345
            prefix: formation
            project_name: Cloud Native Computing Foundation
            project_slug: cncf
            project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public: true
            status: created
            type: primary
            uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            updated_at: "2023-06-20T14:45:30Z"
            url: https://lists.project.org
            writers:
                - manager_user_id1
                - manager_user_id2
        required:
            - type
            - project_uid
    ServiceUnavailableError:
        title: ServiceUnavailableError
        type: object
        properties:
            message:
                type: string
                description: Error message
                example: The service is unavailable.
        description: Service unavailable
        example:
            message: The service is unavailable.
        required:
            - message
    ServiceWithReadonlyAttributes:
        title: ServiceWithReadonlyAttributes
        type: object
        properties:
            auditors:
                type: array
                items:
                    type: string
                    example: Quibusdam nemo animi est accusamus blanditiis culpa.
                description: Auditor user IDs who can audit this service
                example:
                    - auditor_user_id1
                    - auditor_user_id2
            created_at:
                type: string
                description: The timestamp when the service was created (read-only)
                example: "2023-01-15T10:30:00Z"
                format: date-time
            domain:
                type: string
                description: Service domain
                example: lists.project.org
            global_owners:
                type: array
                items:
                    type: string
                    example: elisabeth_crooks@durgannikolaus.com
                    format: email
                description: List of global owner email addresses (required for primary, forbidden for shared)
                example:
                    - admin@example.com
            group_id:
                type: integer
                description: GroupsIO group ID
                example: 12345
                format: int64
            group_name:
                type: string
                description: GroupsIO group name
                example: project-name
            last_audited_by:
                type: string
                description: The user ID who last audited the service
                example: user_id_12345
            last_audited_time:
                type: string
                description: The timestamp when the service was last audited
                example: "2023-05-10T09:15:00Z"
                format: date-time
            last_reviewed_at:
                type: string
                description: The timestamp when the service was last reviewed in RFC3339 format
                example: "2025-08-04T09:00:00Z"
                format: date-time
            last_reviewed_by:
                type: string
                description: The user ID who last reviewed this service
                example: user_id_12345
            prefix:
                type: string
                description: Email prefix (required for formation and shared, forbidden for primary)
                example: formation
            project_name:
                type: string
                description: Project name (read-only)
                example: Cloud Native Computing Foundation
            project_slug:
                type: string
                description: Project slug identifier
                example: cncf
                format: regexp
                pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
            project_uid:
                type: string
                description: LFXv2 Project UID
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                format: uuid
            public:
                type: boolean
                description: Whether the service is publicly accessible
                default: false
                example: true
            status:
                type: string
                description: Service status
                example: created
            type:
                type: string
                description: Service type
                example: primary
                enum:
                    - primary
                    - formation
                    - shared
            uid:
                type: string
                description: Service UID -- unique identifier for the service
                example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                format: uuid
            updated_at:
                type: string
                description: The timestamp when the service was last updated (read-only)
                example: "2023-06-20T14:45:30Z"
                format: date-time
            url:
                type: string
                description: Service URL
                example: https://lists.project.org
                format: uri
            writers:
                type: array
                items:
                    type: string
                    example: Nisi est.
                description: Manager user IDs who can edit/modify this service
                example:
                    - manager_user_id1
                    - manager_user_id2
        description: A representation of GroupsIO services with readonly attributes.
        example:
            auditors:
                - auditor_user_id1
                - auditor_user_id2
            created_at: "2023-01-15T10:30:00Z"
            domain: lists.project.org
            global_owners:
                - admin@example.com
            group_id: 12345
            group_name: project-name
            last_audited_by: user_id_12345
            last_audited_time: "2023-05-10T09:15:00Z"
            last_reviewed_at: "2025-08-04T09:00:00Z"
            last_reviewed_by: user_id_12345
            prefix: formation
            project_name: Cloud Native Computing Foundation
            project_slug: cncf
            project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            public: true
            status: created
            type: primary
            uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            updated_at: "2023-06-20T14:45:30Z"
            url: https://lists.project.org
            writers:
                - manager_user_id1
                - manager_user_id2
        required:
            - type
            - project_uid
securityDefinitions:
    jwt_header_Authorization:
        type: apiKey
        description: Heimdall authorization
        name: Authorization
        in: header
