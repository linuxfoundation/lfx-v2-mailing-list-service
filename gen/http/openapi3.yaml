openapi: 3.0.3
info:
    title: Mailing List Service
    description: Service for managing mailing lists in LFX
    version: 0.0.1
servers:
    - url: http://localhost:80
      description: Default server for mailing-list
paths:
    /groupsio/mailing-lists:
        post:
            tags:
                - mailing-list
            summary: create-grpsio-mailing-list mailing-list
            description: Create GroupsIO mailing list/subgroup with comprehensive validation
            operationId: mailing-list#create-grpsio-mailing-list
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGrpsioMailingListRequestBody'
                        example:
                            auditors:
                                - auditor_user_id1
                                - auditor_user_id2
                            committee_filters:
                                - Voting Rep
                                - Alternate Voting Rep
                            committee_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                            description: Technical steering committee discussions
                            group_name: technical-steering-committee
                            public: false
                            service_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                            subject_tag: '[TSC]'
                            title: Technical Steering Committee
                            type: discussion_moderated
                            writers:
                                - manager_user_id1
                                - manager_user_id2
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoMailingListFull'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                committee_filters:
                                    - Voting Rep
                                    - Alternate Voting Rep
                                committee_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                created_at: "2023-01-15T10:30:00Z"
                                description: Technical steering committee discussions
                                group_name: technical-steering-committee
                                last_reviewed_at: "2025-08-04T09:00:00Z"
                                last_reviewed_by: user_id_12345
                                project_name: Cloud Native Computing Foundation
                                project_slug: cncf
                                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                public: false
                                service_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                subject_tag: '[TSC]'
                                title: Technical Steering Committee
                                type: discussion_moderated
                                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                updated_at: "2023-06-20T14:45:30Z"
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request - Invalid data, missing required fields, or validation failures'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Parent service not found or committee not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Mailing list with same name already exists'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /groupsio/mailing-lists/{uid}:
        delete:
            tags:
                - mailing-list
            summary: delete-grpsio-mailing-list mailing-list
            description: Delete GroupsIO mailing list
            operationId: mailing-list#delete-grpsio-mailing-list
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Mailing list UID -- unique identifier for the mailing list
                  required: true
                  schema:
                    type: string
                    description: Mailing list UID -- unique identifier for the mailing list
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - name: If-Match
                  in: header
                  description: If-Match header value for conditional requests
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: If-Match header value for conditional requests
                    example: "123"
                  example: "123"
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Mailing list not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Conflict - ETag mismatch or deletion not allowed'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
        get:
            tags:
                - mailing-list
            summary: get-grpsio-mailing-list mailing-list
            description: Get GroupsIO mailing list details by UID
            operationId: mailing-list#get-grpsio-mailing-list
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Mailing list UID -- unique identifier for the mailing list
                  required: true
                  schema:
                    type: string
                    description: Mailing list UID -- unique identifier for the mailing list
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag header value
                            schema:
                                type: string
                                description: ETag header value
                                example: "123"
                            example: "123"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoMailingListWithReadonlyAttributes'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                committee_filters:
                                    - Voting Rep
                                    - Alternate Voting Rep
                                committee_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                created_at: "2023-01-15T10:30:00Z"
                                description: Technical steering committee discussions
                                group_name: technical-steering-committee
                                project_name: Cloud Native Computing Foundation
                                project_slug: cncf
                                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                public: false
                                service_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                subject_tag: '[TSC]'
                                title: Technical Steering Committee
                                type: discussion_moderated
                                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                updated_at: "2023-06-20T14:45:30Z"
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Mailing list not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - mailing-list
            summary: update-grpsio-mailing-list mailing-list
            description: Update GroupsIO mailing list
            operationId: mailing-list#update-grpsio-mailing-list
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Mailing list UID -- unique identifier for the mailing list
                  required: true
                  schema:
                    type: string
                    description: Mailing list UID -- unique identifier for the mailing list
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - name: If-Match
                  in: header
                  description: If-Match header value for conditional requests
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: If-Match header value for conditional requests
                    example: "123"
                  example: "123"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGrpsioMailingListRequestBody'
                        example:
                            auditors:
                                - auditor_user_id1
                                - auditor_user_id2
                            committee_filters:
                                - Voting Rep
                                - Alternate Voting Rep
                            committee_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                            description: Technical steering committee discussions
                            group_name: technical-steering-committee
                            public: false
                            service_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                            subject_tag: '[TSC]'
                            title: Technical Steering Committee
                            type: discussion_moderated
                            writers:
                                - manager_user_id1
                                - manager_user_id2
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoMailingListWithReadonlyAttributes'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                committee_filters:
                                    - Voting Rep
                                    - Alternate Voting Rep
                                committee_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                created_at: "2023-01-15T10:30:00Z"
                                description: Technical steering committee discussions
                                group_name: technical-steering-committee
                                project_name: Cloud Native Computing Foundation
                                project_slug: cncf
                                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                public: false
                                service_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                subject_tag: '[TSC]'
                                title: Technical Steering Committee
                                type: discussion_moderated
                                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                updated_at: "2023-06-20T14:45:30Z"
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Mailing list not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Conflict - ETag mismatch or validation failure'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /groupsio/mailing-lists/{uid}/members:
        post:
            tags:
                - mailing-list
            summary: create-grpsio-mailing-list-member mailing-list
            description: Create a new member for a GroupsIO mailing list
            operationId: mailing-list#create-grpsio-mailing-list-member
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Mailing list UID
                  required: true
                  schema:
                    type: string
                    description: Mailing list UID
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                  example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGrpsioMailingListMemberRequestBody'
                        example:
                            delivery_mode: none
                            email: john.doe@example.com
                            first_name: John
                            job_title: Software Engineer
                            last_name: Doe
                            last_reviewed_at: "2023-01-15T14:30:00Z"
                            last_reviewed_by: admin@example.com
                            member_type: direct
                            mod_status: owner
                            organization: Example Corp
                            username: jdoe
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoMemberFull'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                created_at: "2023-01-15T10:30:00Z"
                                delivery_mode: digest
                                email: john.doe@example.com
                                first_name: John
                                groupsio_group_id: 67890
                                groupsio_member_id: 12345
                                job_title: Software Engineer
                                last_name: Doe
                                last_reviewed_at: "2023-01-15T14:30:00Z"
                                last_reviewed_by: admin@example.com
                                mailing_list_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                member_type: direct
                                mod_status: none
                                organization: Example Corp
                                status: pending
                                uid: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                updated_at: "2023-06-20T14:45:30Z"
                                username: jdoe
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Mailing list not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Member already exists'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /groupsio/mailing-lists/{uid}/members/{member_uid}:
        delete:
            tags:
                - mailing-list
            summary: delete-grpsio-mailing-list-member mailing-list
            description: Delete a member from a GroupsIO mailing list
            operationId: mailing-list#delete-grpsio-mailing-list-member
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Mailing list UID -- unique identifier for the mailing list
                  required: true
                  schema:
                    type: string
                    description: Mailing list UID -- unique identifier for the mailing list
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - name: member_uid
                  in: path
                  description: Member UID -- unique identifier for the member
                  required: true
                  schema:
                    type: string
                    description: Member UID -- unique identifier for the member
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                  example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                - name: If-Match
                  in: header
                  description: If-Match header value for conditional requests
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: If-Match header value for conditional requests
                    example: "123"
                  example: "123"
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad request - Cannot remove sole owner'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Member not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Conflict - ETag mismatch'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
        get:
            tags:
                - mailing-list
            summary: get-grpsio-mailing-list-member mailing-list
            description: Get a member of a GroupsIO mailing list by UID
            operationId: mailing-list#get-grpsio-mailing-list-member
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Mailing list UID -- unique identifier for the mailing list
                  required: true
                  schema:
                    type: string
                    description: Mailing list UID -- unique identifier for the mailing list
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - name: member_uid
                  in: path
                  description: Member UID -- unique identifier for the member
                  required: true
                  schema:
                    type: string
                    description: Member UID -- unique identifier for the member
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                  example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag header value
                            schema:
                                type: string
                                description: ETag header value
                                example: "123"
                            example: "123"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoMemberWithReadonlyAttributes'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                created_at: "2023-01-15T10:30:00Z"
                                delivery_mode: normal
                                email: john.doe@example.com
                                first_name: John
                                groupsio_group_id: 67890
                                groupsio_member_id: 12345
                                job_title: Software Engineer
                                last_name: Doe
                                last_reviewed_at: "2023-01-15T14:30:00Z"
                                last_reviewed_by: admin@example.com
                                mailing_list_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                member_type: direct
                                mod_status: owner
                                organization: Example Corp
                                status: pending
                                uid: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                updated_at: "2023-06-20T14:45:30Z"
                                username: jdoe
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Member not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - mailing-list
            summary: update-grpsio-mailing-list-member mailing-list
            description: Update a member of a GroupsIO mailing list
            operationId: mailing-list#update-grpsio-mailing-list-member
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Mailing list UID -- unique identifier for the mailing list
                  required: true
                  schema:
                    type: string
                    description: Mailing list UID -- unique identifier for the mailing list
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - name: member_uid
                  in: path
                  description: Member UID -- unique identifier for the member
                  required: true
                  schema:
                    type: string
                    description: Member UID -- unique identifier for the member
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                  example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                - name: If-Match
                  in: header
                  description: If-Match header value for conditional requests
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: If-Match header value for conditional requests
                    example: "123"
                  example: "123"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGrpsioMailingListMemberRequestBody'
                        example:
                            delivery_mode: digest
                            first_name: John
                            job_title: Software Engineer
                            last_name: Doe
                            mod_status: moderator
                            organization: Example Corp
                            username: jdoe
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoMemberWithReadonlyAttributes'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                created_at: "2023-01-15T10:30:00Z"
                                delivery_mode: normal
                                email: john.doe@example.com
                                first_name: John
                                groupsio_group_id: 67890
                                groupsio_member_id: 12345
                                job_title: Software Engineer
                                last_name: Doe
                                last_reviewed_at: "2023-01-15T14:30:00Z"
                                last_reviewed_by: admin@example.com
                                mailing_list_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                member_type: direct
                                mod_status: moderator
                                organization: Example Corp
                                status: pending
                                uid: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                updated_at: "2023-06-20T14:45:30Z"
                                username: jdoe
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request - Invalid data or immutable field modification'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Member not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Conflict - ETag mismatch or validation failure'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /groupsio/services:
        post:
            tags:
                - mailing-list
            summary: create-grpsio-service mailing-list
            description: Create GroupsIO service with type-specific validation rules
            operationId: mailing-list#create-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGrpsioServiceRequestBody'
                        example:
                            auditors:
                                - auditor_user_id1
                                - auditor_user_id2
                            domain: lists.project.org
                            global_owners:
                                - admin@example.com
                            group_id: 12345
                            group_name: project-name
                            prefix: formation
                            project_slug: cncf
                            project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                            public: true
                            status: created
                            type: primary
                            url: https://lists.project.org
                            writers:
                                - manager_user_id1
                                - manager_user_id2
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoServiceFull'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                created_at: "2023-01-15T10:30:00Z"
                                domain: lists.project.org
                                global_owners:
                                    - admin@example.com
                                group_id: 12345
                                group_name: project-name
                                last_audited_by: user_id_12345
                                last_audited_time: "2023-05-10T09:15:00Z"
                                last_reviewed_at: "2025-08-04T09:00:00Z"
                                last_reviewed_by: user_id_12345
                                prefix: formation
                                project_name: Cloud Native Computing Foundation
                                project_slug: cncf
                                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                public: true
                                status: created
                                type: primary
                                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                updated_at: "2023-06-20T14:45:30Z"
                                url: https://lists.project.org
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request - Invalid type, missing required fields, or validation failures'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Resource not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Conflict'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /groupsio/services/{uid}:
        delete:
            tags:
                - mailing-list
            summary: delete-grpsio-service mailing-list
            description: Delete GroupsIO service
            operationId: mailing-list#delete-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Service UID -- unique identifier for the service
                  required: true
                  schema:
                    type: string
                    description: Service UID -- unique identifier for the service
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - name: If-Match
                  in: header
                  description: If-Match header value for conditional requests
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: If-Match header value for conditional requests
                    example: "123"
                  example: "123"
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Resource not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Conflict'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
        get:
            tags:
                - mailing-list
            summary: get-grpsio-service mailing-list
            description: Get groupsIO service details by ID
            operationId: mailing-list#get-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Service UID -- unique identifier for the service
                  required: true
                  schema:
                    type: string
                    description: Service UID -- unique identifier for the service
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag header value
                            schema:
                                type: string
                                description: ETag header value
                                example: "123"
                            example: "123"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoServiceWithReadonlyAttributes'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                created_at: "2023-01-15T10:30:00Z"
                                domain: lists.project.org
                                global_owners:
                                    - admin@example.com
                                group_id: 12345
                                group_name: project-name
                                last_audited_by: user_id_12345
                                last_audited_time: "2023-05-10T09:15:00Z"
                                last_reviewed_at: "2025-08-04T09:00:00Z"
                                last_reviewed_by: user_id_12345
                                prefix: formation
                                project_name: Cloud Native Computing Foundation
                                project_slug: cncf
                                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                public: true
                                status: created
                                type: primary
                                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                updated_at: "2023-06-20T14:45:30Z"
                                url: https://lists.project.org
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Resource not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - mailing-list
            summary: update-grpsio-service mailing-list
            description: Update GroupsIO service
            operationId: mailing-list#update-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Service UID -- unique identifier for the service
                  required: true
                  schema:
                    type: string
                    description: Service UID -- unique identifier for the service
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                  example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                - name: If-Match
                  in: header
                  description: If-Match header value for conditional requests
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: If-Match header value for conditional requests
                    example: "123"
                  example: "123"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGrpsioServiceRequestBody'
                        example:
                            auditors:
                                - auditor_user_id1
                                - auditor_user_id2
                            domain: lists.project.org
                            global_owners:
                                - admin@example.com
                            group_id: 12345
                            group_name: project-name
                            prefix: formation
                            project_slug: cncf
                            project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                            public: true
                            status: created
                            type: primary
                            url: https://lists.project.org
                            writers:
                                - manager_user_id1
                                - manager_user_id2
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrpsIoServiceWithReadonlyAttributes'
                            example:
                                auditors:
                                    - auditor_user_id1
                                    - auditor_user_id2
                                created_at: "2023-01-15T10:30:00Z"
                                domain: lists.project.org
                                global_owners:
                                    - admin@example.com
                                group_id: 12345
                                group_name: project-name
                                last_audited_by: user_id_12345
                                last_audited_time: "2023-05-10T09:15:00Z"
                                last_reviewed_at: "2025-08-04T09:00:00Z"
                                last_reviewed_by: user_id_12345
                                prefix: formation
                                project_name: Cloud Native Computing Foundation
                                project_slug: cncf
                                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                public: true
                                status: created
                                type: primary
                                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                updated_at: "2023-06-20T14:45:30Z"
                                url: https://lists.project.org
                                writers:
                                    - manager_user_id1
                                    - manager_user_id2
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Resource not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "409":
                    description: 'Conflict: Conflict'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConflictError'
                            example:
                                message: The resource already exists.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /livez:
        get:
            tags:
                - mailing-list
            summary: livez mailing-list
            description: Check if the service is alive.
            operationId: mailing-list#livez
            responses:
                "200":
                    description: OK response.
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: OK
                                format: binary
                            example: OK
    /openapi.json:
        get:
            tags:
                - mailing-list
            summary: Download gen/http/openapi3.json
            operationId: mailing-list#/openapi.json
            responses:
                "200":
                    description: File downloaded
    /readyz:
        get:
            tags:
                - mailing-list
            summary: readyz mailing-list
            description: Check if the service is able to take inbound requests.
            operationId: mailing-list#readyz
            responses:
                "200":
                    description: OK response.
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: OK
                                format: binary
                            example: OK
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
    /webhooks/groupsio:
        post:
            tags:
                - mailing-list
            summary: groupsio-webhook mailing-list
            description: Handle GroupsIO webhook events for subgroup and member changes
            operationId: mailing-list#groupsio-webhook
            parameters:
                - name: x-groupsio-signature
                  in: header
                  description: HMAC-SHA1 signature from x-groupsio-signature header
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: HMAC-SHA1 signature from x-groupsio-signature header
                    example: Et quas doloremque modi.
                  example: Vel voluptatem omnis.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GroupsioWebhookRequestBody'
                        example:
                            body:
                                - 81
                                - 117
                                - 111
                                - 32
                                - 101
                                - 110
                                - 105
                                - 109
                                - 32
                                - 97
                                - 98
                                - 32
                                - 114
                                - 97
                                - 116
                                - 105
                                - 111
                                - 110
                                - 101
                                - 32
                                - 113
                                - 117
                                - 97
                                - 115
                                - 105
                                - 46
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Invalid webhook payload or signature'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "401":
                    description: 'Unauthorized: Invalid webhook signature'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                message: Unauthorized access.
components:
    schemas:
        BadRequestError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The request was invalid.
            example:
                message: The request was invalid.
            required:
                - message
        ConflictError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The resource already exists.
            example:
                message: The resource already exists.
            required:
                - message
        CreateGrpsioMailingListMemberRequestBody:
            type: object
            properties:
                delivery_mode:
                    type: string
                    description: Email delivery mode
                    default: normal
                    example: normal
                    enum:
                        - normal
                        - digest
                        - none
                email:
                    type: string
                    description: Member email address
                    example: john.doe@example.com
                    format: email
                first_name:
                    type: string
                    description: Member first name
                    example: John
                    minLength: 1
                    maxLength: 255
                job_title:
                    type: string
                    description: Member job title
                    example: Software Engineer
                    maxLength: 255
                last_name:
                    type: string
                    description: Member last name
                    example: Doe
                    minLength: 1
                    maxLength: 255
                last_reviewed_at:
                    type: string
                    description: Last reviewed timestamp
                    example: "2023-01-15T14:30:00Z"
                    format: date-time
                last_reviewed_by:
                    type: string
                    description: Last reviewed by user ID
                    example: admin@example.com
                member_type:
                    type: string
                    description: Member type
                    default: direct
                    example: committee
                    enum:
                        - committee
                        - direct
                mod_status:
                    type: string
                    description: Moderation status
                    default: none
                    example: none
                    enum:
                        - none
                        - moderator
                        - owner
                organization:
                    type: string
                    description: Member organization
                    example: Example Corp
                    maxLength: 255
                username:
                    type: string
                    description: Member username
                    example: jdoe
                    maxLength: 255
            example:
                delivery_mode: none
                email: john.doe@example.com
                first_name: John
                job_title: Software Engineer
                last_name: Doe
                last_reviewed_at: "2023-01-15T14:30:00Z"
                last_reviewed_by: admin@example.com
                member_type: direct
                mod_status: owner
                organization: Example Corp
                username: jdoe
            required:
                - email
        CreateGrpsioMailingListRequestBody:
            type: object
            properties:
                auditors:
                    type: array
                    items:
                        type: string
                        example: Ea nesciunt et itaque soluta soluta sed.
                    description: Auditor user IDs who can audit this service
                    example:
                        - auditor_user_id1
                        - auditor_user_id2
                committee_filters:
                    type: array
                    items:
                        type: string
                        example: None
                        enum:
                            - Voting Rep
                            - Alternate Voting Rep
                            - Observer
                            - Emeritus
                            - None
                    description: Committee member filters
                    example:
                        - Voting Rep
                        - Alternate Voting Rep
                committee_uid:
                    type: string
                    description: Committee UUID for committee-based mailing lists
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                description:
                    type: string
                    description: Mailing list description (11-500 characters)
                    example: Technical steering committee discussions
                    minLength: 11
                    maxLength: 500
                group_name:
                    type: string
                    description: Mailing list group name
                    example: technical-steering-committee
                    pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*[a-zA-Z0-9]$
                    minLength: 3
                    maxLength: 34
                public:
                    type: boolean
                    description: Whether the mailing list is publicly accessible
                    default: false
                    example: false
                service_uid:
                    type: string
                    description: Service UUID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                subject_tag:
                    type: string
                    description: Subject tag prefix
                    example: '[TSC]'
                    maxLength: 50
                title:
                    type: string
                    description: Mailing list title
                    example: Technical Steering Committee
                    minLength: 5
                    maxLength: 100
                type:
                    type: string
                    description: Mailing list type
                    example: discussion_moderated
                    enum:
                        - announcement
                        - discussion_moderated
                        - discussion_open
                writers:
                    type: array
                    items:
                        type: string
                        example: Aliquam optio libero totam voluptatem.
                    description: Manager user IDs who can edit/modify this service
                    example:
                        - manager_user_id1
                        - manager_user_id2
            example:
                auditors:
                    - auditor_user_id1
                    - auditor_user_id2
                committee_filters:
                    - Voting Rep
                    - Alternate Voting Rep
                committee_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                description: Technical steering committee discussions
                group_name: technical-steering-committee
                public: false
                service_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                subject_tag: '[TSC]'
                title: Technical Steering Committee
                type: discussion_moderated
                writers:
                    - manager_user_id1
                    - manager_user_id2
            required:
                - group_name
                - public
                - type
                - description
                - title
                - service_uid
        CreateGrpsioServiceRequestBody:
            type: object
            properties:
                auditors:
                    type: array
                    items:
                        type: string
                        example: Enim itaque vel sit consectetur inventore sed.
                    description: Auditor user IDs who can audit this service
                    example:
                        - auditor_user_id1
                        - auditor_user_id2
                domain:
                    type: string
                    description: Service domain
                    example: lists.project.org
                global_owners:
                    type: array
                    items:
                        type: string
                        example: nathaniel_kuvalis@muller.com
                        format: email
                    description: List of global owner email addresses (required for primary, forbidden for shared)
                    example:
                        - admin@example.com
                group_id:
                    type: integer
                    description: GroupsIO group ID
                    example: 12345
                    format: int64
                group_name:
                    type: string
                    description: GroupsIO group name
                    example: project-name
                prefix:
                    type: string
                    description: Email prefix (required for formation and shared, forbidden for primary)
                    example: formation
                project_slug:
                    type: string
                    description: Project slug identifier
                    example: cncf
                    format: regexp
                    pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
                project_uid:
                    type: string
                    description: LFXv2 Project UID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                public:
                    type: boolean
                    description: Whether the service is publicly accessible
                    default: false
                    example: true
                status:
                    type: string
                    description: Service status
                    example: created
                type:
                    type: string
                    description: Service type
                    example: primary
                    enum:
                        - primary
                        - formation
                        - shared
                url:
                    type: string
                    description: Service URL
                    example: https://lists.project.org
                    format: uri
                writers:
                    type: array
                    items:
                        type: string
                        example: Quam perspiciatis ex voluptatem dolor.
                    description: Manager user IDs who can edit/modify this service
                    example:
                        - manager_user_id1
                        - manager_user_id2
            example:
                auditors:
                    - auditor_user_id1
                    - auditor_user_id2
                domain: lists.project.org
                global_owners:
                    - admin@example.com
                group_id: 12345
                group_name: project-name
                prefix: formation
                project_slug: cncf
                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                public: true
                status: created
                type: primary
                url: https://lists.project.org
                writers:
                    - manager_user_id1
                    - manager_user_id2
            required:
                - type
                - project_uid
        GroupsioWebhookRequestBody:
            type: object
            properties:
                body:
                    type: string
                    description: Raw webhook event body
                    example:
                        - 69
                        - 120
                        - 99
                        - 101
                        - 112
                        - 116
                        - 117
                        - 114
                        - 105
                        - 32
                        - 101
                        - 116
                        - 32
                        - 99
                        - 111
                        - 110
                        - 115
                        - 101
                        - 113
                        - 117
                        - 97
                        - 116
                        - 117
                        - 114
                        - 32
                        - 109
                        - 111
                        - 108
                        - 101
                        - 115
                        - 116
                        - 105
                        - 97
                        - 115
                        - 32
                        - 111
                        - 109
                        - 110
                        - 105
                        - 115
                        - 32
                        - 97
                        - 108
                        - 105
                        - 113
                        - 117
                        - 105
                        - 100
                        - 46
                    format: binary
            example:
                body:
                    - 82
                    - 101
                    - 114
                    - 117
                    - 109
                    - 32
                    - 99
                    - 111
                    - 110
                    - 115
                    - 101
                    - 113
                    - 117
                    - 97
                    - 116
                    - 117
                    - 114
                    - 46
            required:
                - body
        GrpsIoMailingListFull:
            type: object
            properties:
                auditors:
                    type: array
                    items:
                        type: string
                        example: Neque ad voluptatum magni.
                    description: Auditor user IDs who can audit this service
                    example:
                        - auditor_user_id1
                        - auditor_user_id2
                committee_filters:
                    type: array
                    items:
                        type: string
                        example: None
                        enum:
                            - Voting Rep
                            - Alternate Voting Rep
                            - Observer
                            - Emeritus
                            - None
                    description: Committee member filters
                    example:
                        - Voting Rep
                        - Alternate Voting Rep
                committee_uid:
                    type: string
                    description: Committee UUID for committee-based mailing lists
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                created_at:
                    type: string
                    description: The timestamp when the service was created (read-only)
                    example: "2023-01-15T10:30:00Z"
                    format: date-time
                description:
                    type: string
                    description: Mailing list description (11-500 characters)
                    example: Technical steering committee discussions
                    minLength: 11
                    maxLength: 500
                group_name:
                    type: string
                    description: Mailing list group name
                    example: technical-steering-committee
                    pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*[a-zA-Z0-9]$
                    minLength: 3
                    maxLength: 34
                last_reviewed_at:
                    type: string
                    description: The timestamp when the service was last reviewed in RFC3339 format
                    example: "2025-08-04T09:00:00Z"
                    format: date-time
                last_reviewed_by:
                    type: string
                    description: The user ID who last reviewed this service
                    example: user_id_12345
                project_name:
                    type: string
                    description: Project name (read-only)
                    example: Cloud Native Computing Foundation
                project_slug:
                    type: string
                    description: Project slug identifier (read-only)
                    example: cncf
                    format: regexp
                    pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
                project_uid:
                    type: string
                    description: LFXv2 Project UID (inherited from parent service)
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                public:
                    type: boolean
                    description: Whether the mailing list is publicly accessible
                    default: false
                    example: false
                service_uid:
                    type: string
                    description: Service UUID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                subject_tag:
                    type: string
                    description: Subject tag prefix
                    example: '[TSC]'
                    maxLength: 50
                title:
                    type: string
                    description: Mailing list title
                    example: Technical Steering Committee
                    minLength: 5
                    maxLength: 100
                type:
                    type: string
                    description: Mailing list type
                    example: discussion_moderated
                    enum:
                        - announcement
                        - discussion_moderated
                        - discussion_open
                uid:
                    type: string
                    description: Mailing list UID -- unique identifier for the mailing list
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                updated_at:
                    type: string
                    description: The timestamp when the service was last updated (read-only)
                    example: "2023-06-20T14:45:30Z"
                    format: date-time
                writers:
                    type: array
                    items:
                        type: string
                        example: Dolor dicta qui minus.
                    description: Manager user IDs who can edit/modify this service
                    example:
                        - manager_user_id1
                        - manager_user_id2
            description: A complete representation of GroupsIO mailing lists with all attributes including access control and audit trail.
            example:
                auditors:
                    - auditor_user_id1
                    - auditor_user_id2
                committee_filters:
                    - Voting Rep
                    - Alternate Voting Rep
                committee_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                created_at: "2023-01-15T10:30:00Z"
                description: Technical steering committee discussions
                group_name: technical-steering-committee
                last_reviewed_at: "2025-08-04T09:00:00Z"
                last_reviewed_by: user_id_12345
                project_name: Cloud Native Computing Foundation
                project_slug: cncf
                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                public: false
                service_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                subject_tag: '[TSC]'
                title: Technical Steering Committee
                type: discussion_moderated
                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                updated_at: "2023-06-20T14:45:30Z"
                writers:
                    - manager_user_id1
                    - manager_user_id2
        GrpsIoMailingListWithReadonlyAttributes:
            type: object
            properties:
                auditors:
                    type: array
                    items:
                        type: string
                        example: Non rem aut aut.
                    description: Auditor user IDs who can audit this service
                    example:
                        - auditor_user_id1
                        - auditor_user_id2
                committee_filters:
                    type: array
                    items:
                        type: string
                        example: Emeritus
                        enum:
                            - Voting Rep
                            - Alternate Voting Rep
                            - Observer
                            - Emeritus
                            - None
                    description: Committee member filters
                    example:
                        - Voting Rep
                        - Alternate Voting Rep
                committee_uid:
                    type: string
                    description: Committee UUID for committee-based mailing lists
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                created_at:
                    type: string
                    description: The timestamp when the service was created (read-only)
                    example: "2023-01-15T10:30:00Z"
                    format: date-time
                description:
                    type: string
                    description: Mailing list description (11-500 characters)
                    example: Technical steering committee discussions
                    minLength: 11
                    maxLength: 500
                group_name:
                    type: string
                    description: Mailing list group name
                    example: technical-steering-committee
                    pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*[a-zA-Z0-9]$
                    minLength: 3
                    maxLength: 34
                project_name:
                    type: string
                    description: Project name (read-only)
                    example: Cloud Native Computing Foundation
                project_slug:
                    type: string
                    description: Project slug identifier (read-only)
                    example: cncf
                    format: regexp
                    pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
                project_uid:
                    type: string
                    description: LFXv2 Project UID (inherited from parent service)
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                public:
                    type: boolean
                    description: Whether the mailing list is publicly accessible
                    default: false
                    example: false
                service_uid:
                    type: string
                    description: Service UUID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                subject_tag:
                    type: string
                    description: Subject tag prefix
                    example: '[TSC]'
                    maxLength: 50
                title:
                    type: string
                    description: Mailing list title
                    example: Technical Steering Committee
                    minLength: 5
                    maxLength: 100
                type:
                    type: string
                    description: Mailing list type
                    example: discussion_moderated
                    enum:
                        - announcement
                        - discussion_moderated
                        - discussion_open
                uid:
                    type: string
                    description: Mailing list UID -- unique identifier for the mailing list
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                updated_at:
                    type: string
                    description: The timestamp when the service was last updated (read-only)
                    example: "2023-06-20T14:45:30Z"
                    format: date-time
                writers:
                    type: array
                    items:
                        type: string
                        example: Cumque omnis ut et quia.
                    description: Manager user IDs who can edit/modify this service
                    example:
                        - manager_user_id1
                        - manager_user_id2
            description: A representation of GroupsIO mailing lists with readonly attributes.
            example:
                auditors:
                    - auditor_user_id1
                    - auditor_user_id2
                committee_filters:
                    - Voting Rep
                    - Alternate Voting Rep
                committee_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                created_at: "2023-01-15T10:30:00Z"
                description: Technical steering committee discussions
                group_name: technical-steering-committee
                project_name: Cloud Native Computing Foundation
                project_slug: cncf
                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                public: false
                service_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                subject_tag: '[TSC]'
                title: Technical Steering Committee
                type: discussion_moderated
                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                updated_at: "2023-06-20T14:45:30Z"
                writers:
                    - manager_user_id1
                    - manager_user_id2
        GrpsIoMemberFull:
            type: object
            properties:
                auditors:
                    type: array
                    items:
                        type: string
                        example: Quis iste itaque occaecati dolores.
                    description: Auditor user IDs who can audit this service
                    example:
                        - auditor_user_id1
                        - auditor_user_id2
                created_at:
                    type: string
                    description: The timestamp when the service was created (read-only)
                    example: "2023-01-15T10:30:00Z"
                    format: date-time
                delivery_mode:
                    type: string
                    description: Email delivery mode
                    default: normal
                    example: none
                    enum:
                        - normal
                        - digest
                        - none
                email:
                    type: string
                    description: Member email address
                    example: john.doe@example.com
                    format: email
                first_name:
                    type: string
                    description: Member first name
                    example: John
                    minLength: 1
                    maxLength: 255
                groupsio_group_id:
                    type: integer
                    description: Groups.io group ID
                    example: 67890
                    format: int64
                groupsio_member_id:
                    type: integer
                    description: Groups.io member ID
                    example: 12345
                    format: int64
                job_title:
                    type: string
                    description: Member job title
                    example: Software Engineer
                    maxLength: 255
                last_name:
                    type: string
                    description: Member last name
                    example: Doe
                    minLength: 1
                    maxLength: 255
                last_reviewed_at:
                    type: string
                    description: Last reviewed timestamp
                    example: "2023-01-15T14:30:00Z"
                    format: date-time
                last_reviewed_by:
                    type: string
                    description: Last reviewed by user ID
                    example: admin@example.com
                mailing_list_uid:
                    type: string
                    description: Mailing list UID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                member_type:
                    type: string
                    description: Member type
                    default: direct
                    example: committee
                    enum:
                        - committee
                        - direct
                mod_status:
                    type: string
                    description: Moderation status
                    default: none
                    example: owner
                    enum:
                        - none
                        - moderator
                        - owner
                organization:
                    type: string
                    description: Member organization
                    example: Example Corp
                    maxLength: 255
                status:
                    type: string
                    description: Member status
                    example: pending
                uid:
                    type: string
                    description: Member UID
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                updated_at:
                    type: string
                    description: The timestamp when the service was last updated (read-only)
                    example: "2023-06-20T14:45:30Z"
                    format: date-time
                username:
                    type: string
                    description: Member username
                    example: jdoe
                    maxLength: 255
                writers:
                    type: array
                    items:
                        type: string
                        example: Rerum et rem officiis molestiae voluptas.
                    description: Manager user IDs who can edit/modify this service
                    example:
                        - manager_user_id1
                        - manager_user_id2
            description: A complete representation of a GroupsIO mailing list member with all attributes.
            example:
                auditors:
                    - auditor_user_id1
                    - auditor_user_id2
                created_at: "2023-01-15T10:30:00Z"
                delivery_mode: normal
                email: john.doe@example.com
                first_name: John
                groupsio_group_id: 67890
                groupsio_member_id: 12345
                job_title: Software Engineer
                last_name: Doe
                last_reviewed_at: "2023-01-15T14:30:00Z"
                last_reviewed_by: admin@example.com
                mailing_list_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                member_type: committee
                mod_status: none
                organization: Example Corp
                status: pending
                uid: f47ac10b-58cc-4372-a567-0e02b2c3d479
                updated_at: "2023-06-20T14:45:30Z"
                username: jdoe
                writers:
                    - manager_user_id1
                    - manager_user_id2
            required:
                - uid
                - mailing_list_uid
                - first_name
                - last_name
                - email
                - member_type
                - delivery_mode
                - mod_status
                - status
                - created_at
                - updated_at
        GrpsIoMemberWithReadonlyAttributes:
            type: object
            properties:
                auditors:
                    type: array
                    items:
                        type: string
                        example: Hic tempore non atque ut quis ut.
                    description: Auditor user IDs who can audit this service
                    example:
                        - auditor_user_id1
                        - auditor_user_id2
                created_at:
                    type: string
                    description: The timestamp when the service was created (read-only)
                    example: "2023-01-15T10:30:00Z"
                    format: date-time
                delivery_mode:
                    type: string
                    description: Email delivery mode
                    default: normal
                    example: normal
                    enum:
                        - normal
                        - digest
                        - none
                email:
                    type: string
                    description: Member email address
                    example: john.doe@example.com
                    format: email
                first_name:
                    type: string
                    description: Member first name
                    example: John
                    minLength: 1
                    maxLength: 255
                groupsio_group_id:
                    type: integer
                    description: Groups.io group ID
                    example: 67890
                    format: int64
                groupsio_member_id:
                    type: integer
                    description: Groups.io member ID
                    example: 12345
                    format: int64
                job_title:
                    type: string
                    description: Member job title
                    example: Software Engineer
                    maxLength: 255
                last_name:
                    type: string
                    description: Member last name
                    example: Doe
                    minLength: 1
                    maxLength: 255
                last_reviewed_at:
                    type: string
                    description: Last reviewed timestamp
                    example: "2023-01-15T14:30:00Z"
                    format: date-time
                last_reviewed_by:
                    type: string
                    description: Last reviewed by user ID
                    example: admin@example.com
                mailing_list_uid:
                    type: string
                    description: Mailing list UID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                member_type:
                    type: string
                    description: Member type
                    default: direct
                    example: direct
                    enum:
                        - committee
                        - direct
                mod_status:
                    type: string
                    description: Moderation status
                    default: none
                    example: owner
                    enum:
                        - none
                        - moderator
                        - owner
                organization:
                    type: string
                    description: Member organization
                    example: Example Corp
                    maxLength: 255
                status:
                    type: string
                    description: Member status
                    example: pending
                uid:
                    type: string
                    description: Member UID
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                updated_at:
                    type: string
                    description: The timestamp when the service was last updated (read-only)
                    example: "2023-06-20T14:45:30Z"
                    format: date-time
                username:
                    type: string
                    description: Member username
                    example: jdoe
                    maxLength: 255
                writers:
                    type: array
                    items:
                        type: string
                        example: Cumque quidem impedit voluptas quia rem provident.
                    description: Manager user IDs who can edit/modify this service
                    example:
                        - manager_user_id1
                        - manager_user_id2
            description: A representation of GroupsIO mailing list members with readonly attributes.
            example:
                auditors:
                    - auditor_user_id1
                    - auditor_user_id2
                created_at: "2023-01-15T10:30:00Z"
                delivery_mode: none
                email: john.doe@example.com
                first_name: John
                groupsio_group_id: 67890
                groupsio_member_id: 12345
                job_title: Software Engineer
                last_name: Doe
                last_reviewed_at: "2023-01-15T14:30:00Z"
                last_reviewed_by: admin@example.com
                mailing_list_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                member_type: direct
                mod_status: none
                organization: Example Corp
                status: pending
                uid: f47ac10b-58cc-4372-a567-0e02b2c3d479
                updated_at: "2023-06-20T14:45:30Z"
                username: jdoe
                writers:
                    - manager_user_id1
                    - manager_user_id2
        GrpsIoServiceFull:
            type: object
            properties:
                auditors:
                    type: array
                    items:
                        type: string
                        example: Cupiditate exercitationem.
                    description: Auditor user IDs who can audit this service
                    example:
                        - auditor_user_id1
                        - auditor_user_id2
                created_at:
                    type: string
                    description: The timestamp when the service was created (read-only)
                    example: "2023-01-15T10:30:00Z"
                    format: date-time
                domain:
                    type: string
                    description: Service domain
                    example: lists.project.org
                global_owners:
                    type: array
                    items:
                        type: string
                        example: beth@gerlach.com
                        format: email
                    description: List of global owner email addresses (required for primary, forbidden for shared)
                    example:
                        - admin@example.com
                group_id:
                    type: integer
                    description: GroupsIO group ID
                    example: 12345
                    format: int64
                group_name:
                    type: string
                    description: GroupsIO group name
                    example: project-name
                last_audited_by:
                    type: string
                    description: The user ID who last audited the service
                    example: user_id_12345
                last_audited_time:
                    type: string
                    description: The timestamp when the service was last audited
                    example: "2023-05-10T09:15:00Z"
                    format: date-time
                last_reviewed_at:
                    type: string
                    description: The timestamp when the service was last reviewed in RFC3339 format
                    example: "2025-08-04T09:00:00Z"
                    format: date-time
                last_reviewed_by:
                    type: string
                    description: The user ID who last reviewed this service
                    example: user_id_12345
                prefix:
                    type: string
                    description: Email prefix (required for formation and shared, forbidden for primary)
                    example: formation
                project_name:
                    type: string
                    description: Project name (read-only)
                    example: Cloud Native Computing Foundation
                project_slug:
                    type: string
                    description: Project slug identifier
                    example: cncf
                    format: regexp
                    pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
                project_uid:
                    type: string
                    description: LFXv2 Project UID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                public:
                    type: boolean
                    description: Whether the service is publicly accessible
                    default: false
                    example: true
                status:
                    type: string
                    description: Service status
                    example: created
                type:
                    type: string
                    description: Service type
                    example: primary
                    enum:
                        - primary
                        - formation
                        - shared
                uid:
                    type: string
                    description: Service UID -- unique identifier for the service
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                updated_at:
                    type: string
                    description: The timestamp when the service was last updated (read-only)
                    example: "2023-06-20T14:45:30Z"
                    format: date-time
                url:
                    type: string
                    description: Service URL
                    example: https://lists.project.org
                    format: uri
                writers:
                    type: array
                    items:
                        type: string
                        example: Et animi.
                    description: Manager user IDs who can edit/modify this service
                    example:
                        - manager_user_id1
                        - manager_user_id2
            description: A complete representation of GroupsIO services with all attributes including access control and audit trail.
            example:
                auditors:
                    - auditor_user_id1
                    - auditor_user_id2
                created_at: "2023-01-15T10:30:00Z"
                domain: lists.project.org
                global_owners:
                    - admin@example.com
                group_id: 12345
                group_name: project-name
                last_audited_by: user_id_12345
                last_audited_time: "2023-05-10T09:15:00Z"
                last_reviewed_at: "2025-08-04T09:00:00Z"
                last_reviewed_by: user_id_12345
                prefix: formation
                project_name: Cloud Native Computing Foundation
                project_slug: cncf
                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                public: true
                status: created
                type: primary
                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                updated_at: "2023-06-20T14:45:30Z"
                url: https://lists.project.org
                writers:
                    - manager_user_id1
                    - manager_user_id2
            required:
                - type
                - project_uid
        GrpsIoServiceWithReadonlyAttributes:
            type: object
            properties:
                auditors:
                    type: array
                    items:
                        type: string
                        example: Eos illum exercitationem dolorum nobis.
                    description: Auditor user IDs who can audit this service
                    example:
                        - auditor_user_id1
                        - auditor_user_id2
                created_at:
                    type: string
                    description: The timestamp when the service was created (read-only)
                    example: "2023-01-15T10:30:00Z"
                    format: date-time
                domain:
                    type: string
                    description: Service domain
                    example: lists.project.org
                global_owners:
                    type: array
                    items:
                        type: string
                        example: zachary@stehr.com
                        format: email
                    description: List of global owner email addresses (required for primary, forbidden for shared)
                    example:
                        - admin@example.com
                group_id:
                    type: integer
                    description: GroupsIO group ID
                    example: 12345
                    format: int64
                group_name:
                    type: string
                    description: GroupsIO group name
                    example: project-name
                last_audited_by:
                    type: string
                    description: The user ID who last audited the service
                    example: user_id_12345
                last_audited_time:
                    type: string
                    description: The timestamp when the service was last audited
                    example: "2023-05-10T09:15:00Z"
                    format: date-time
                last_reviewed_at:
                    type: string
                    description: The timestamp when the service was last reviewed in RFC3339 format
                    example: "2025-08-04T09:00:00Z"
                    format: date-time
                last_reviewed_by:
                    type: string
                    description: The user ID who last reviewed this service
                    example: user_id_12345
                prefix:
                    type: string
                    description: Email prefix (required for formation and shared, forbidden for primary)
                    example: formation
                project_name:
                    type: string
                    description: Project name (read-only)
                    example: Cloud Native Computing Foundation
                project_slug:
                    type: string
                    description: Project slug identifier
                    example: cncf
                    format: regexp
                    pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
                project_uid:
                    type: string
                    description: LFXv2 Project UID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                public:
                    type: boolean
                    description: Whether the service is publicly accessible
                    default: false
                    example: true
                status:
                    type: string
                    description: Service status
                    example: created
                type:
                    type: string
                    description: Service type
                    example: primary
                    enum:
                        - primary
                        - formation
                        - shared
                uid:
                    type: string
                    description: Service UID -- unique identifier for the service
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                updated_at:
                    type: string
                    description: The timestamp when the service was last updated (read-only)
                    example: "2023-06-20T14:45:30Z"
                    format: date-time
                url:
                    type: string
                    description: Service URL
                    example: https://lists.project.org
                    format: uri
                writers:
                    type: array
                    items:
                        type: string
                        example: Voluptatem consequatur qui quia id.
                    description: Manager user IDs who can edit/modify this service
                    example:
                        - manager_user_id1
                        - manager_user_id2
            description: A representation of GroupsIO services with readonly attributes.
            example:
                auditors:
                    - auditor_user_id1
                    - auditor_user_id2
                created_at: "2023-01-15T10:30:00Z"
                domain: lists.project.org
                global_owners:
                    - admin@example.com
                group_id: 12345
                group_name: project-name
                last_audited_by: user_id_12345
                last_audited_time: "2023-05-10T09:15:00Z"
                last_reviewed_at: "2025-08-04T09:00:00Z"
                last_reviewed_by: user_id_12345
                prefix: formation
                project_name: Cloud Native Computing Foundation
                project_slug: cncf
                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                public: true
                status: created
                type: primary
                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                updated_at: "2023-06-20T14:45:30Z"
                url: https://lists.project.org
                writers:
                    - manager_user_id1
                    - manager_user_id2
            required:
                - type
                - project_uid
        InternalServerError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: An internal server error occurred.
            example:
                message: An internal server error occurred.
            required:
                - message
        NotFoundError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The resource was not found.
            example:
                message: The resource was not found.
            required:
                - message
        ServiceUnavailableError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The service is unavailable.
            example:
                message: The service is unavailable.
            required:
                - message
        UnauthorizedError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: Unauthorized access.
            example:
                message: Unauthorized access.
            required:
                - message
        UpdateGrpsioMailingListMemberRequestBody:
            type: object
            properties:
                delivery_mode:
                    type: string
                    description: Email delivery mode
                    default: normal
                    example: digest
                    enum:
                        - normal
                        - digest
                        - none
                first_name:
                    type: string
                    description: Member first name
                    example: John
                    minLength: 1
                    maxLength: 255
                job_title:
                    type: string
                    description: Member job title
                    example: Software Engineer
                    maxLength: 255
                last_name:
                    type: string
                    description: Member last name
                    example: Doe
                    minLength: 1
                    maxLength: 255
                mod_status:
                    type: string
                    description: Moderation status
                    default: none
                    example: none
                    enum:
                        - none
                        - moderator
                        - owner
                organization:
                    type: string
                    description: Member organization
                    example: Example Corp
                    maxLength: 255
                username:
                    type: string
                    description: Member username
                    example: jdoe
                    maxLength: 255
            example:
                delivery_mode: none
                first_name: John
                job_title: Software Engineer
                last_name: Doe
                mod_status: none
                organization: Example Corp
                username: jdoe
    securitySchemes:
        jwt_header_Authorization:
            type: http
            description: Heimdall authorization
            scheme: bearer
tags:
    - name: mailing-list
      description: The mailing list service manages mailing lists and services
