openapi: 3.0.3
info:
    title: Mailing List Service
    description: Service for managing mailing lists in LFX
    version: 0.0.1
servers:
    - url: http://localhost:80
      description: Default server for mailing-list
paths:
    /groupsio/services/{uid}:
        get:
            tags:
                - mailing-list
            summary: get-grpsio-service mailing-list
            description: Get groupsIO service details by ID
            operationId: mailing-list#get-grpsio-service
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: uid
                  in: path
                  description: Service unique identifier
                  required: true
                  schema:
                    type: string
                    description: Service unique identifier
                    example: Velit quia hic eos eos.
                  example: Quas animi qui.
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag header value
                            schema:
                                type: string
                                description: ETag header value
                                example: "123"
                            example: "123"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceInfo'
                            example:
                                domain: lists.project.org
                                global_owners:
                                    - admin@example.com
                                group_id: 12345
                                group_name: project-name
                                prefix: ""
                                project_slug: cncf
                                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                status: created
                                type: primary
                                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                                url: https://lists.project.org
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Resource not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The resource was not found.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /livez:
        get:
            tags:
                - mailing-list
            summary: livez mailing-list
            description: Check if the service is alive.
            operationId: mailing-list#livez
            responses:
                "200":
                    description: OK response.
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: OK
                                format: binary
                            example: OK
    /openapi.json:
        get:
            tags:
                - mailing-list
            summary: Download gen/http/openapi3.json
            operationId: mailing-list#/openapi.json
            responses:
                "200":
                    description: File downloaded
    /readyz:
        get:
            tags:
                - mailing-list
            summary: readyz mailing-list
            description: Check if the service is able to take inbound requests.
            operationId: mailing-list#readyz
            responses:
                "200":
                    description: OK response.
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: OK
                                format: binary
                            example: OK
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
components:
    schemas:
        BadRequestError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The request was invalid.
            example:
                message: The request was invalid.
            required:
                - message
        ConflictError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The resource already exists.
            example:
                message: The resource already exists.
            required:
                - message
        InternalServerError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: An internal server error occurred.
            example:
                message: An internal server error occurred.
            required:
                - message
        NotFoundError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The resource was not found.
            example:
                message: The resource was not found.
            required:
                - message
        ServiceInfo:
            type: object
            properties:
                domain:
                    type: string
                    description: Service domain
                    example: lists.project.org
                global_owners:
                    type: array
                    items:
                        type: string
                        example: angie.orn@fadel.com
                        format: email
                    description: List of global owner email addresses
                    example:
                        - admin@example.com
                group_id:
                    type: integer
                    description: GroupsIO group ID
                    example: 12345
                    format: int64
                group_name:
                    type: string
                    description: GroupsIO group name
                    example: project-name
                prefix:
                    type: string
                    description: Email prefix
                    example: ""
                project_slug:
                    type: string
                    description: Project slug identifier
                    example: cncf
                    format: regexp
                    pattern: ^[a-z][a-z0-9_\-]*[a-z0-9]$
                project_uid:
                    type: string
                    description: LFXv2 Project UID
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                status:
                    type: string
                    description: Service status
                    example: created
                type:
                    type: string
                    description: Service type
                    example: primary
                    enum:
                        - primary
                        - formation
                        - shared
                uid:
                    type: string
                    description: Unique service identifier
                    example: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                    format: uuid
                url:
                    type: string
                    description: Service URL
                    example: https://lists.project.org
                    format: uri
            description: A GroupsIO service for managing mailing lists
            example:
                domain: lists.project.org
                global_owners:
                    - admin@example.com
                group_id: 12345
                group_name: project-name
                prefix: ""
                project_slug: cncf
                project_uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                status: created
                type: primary
                uid: 7cad5a8d-19d0-41a4-81a6-043453daf9ee
                url: https://lists.project.org
            required:
                - type
                - uid
                - domain
                - group_id
                - status
                - project_slug
                - project_uid
                - url
                - group_name
        ServiceUnavailableError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The service is unavailable.
            example:
                message: The service is unavailable.
            required:
                - message
    securitySchemes:
        jwt_header_Authorization:
            type: http
            description: Heimdall authorization
            scheme: bearer
tags:
    - name: mailing-list
      description: The mailing list service manages mailing lists and services
