// Code generated by goa v3.21.5, DO NOT EDIT.
//
// mailing-list client
//
// Command:
// $ goa gen
// github.com/linuxfoundation/lfx-v2-mailing-list-service/cmd/mailing-list-api/design

package mailinglist

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "mailing-list" service client.
type Client struct {
	LivezEndpoint                         goa.Endpoint
	ReadyzEndpoint                        goa.Endpoint
	CreateGrpsioServiceEndpoint           goa.Endpoint
	GetGrpsioServiceEndpoint              goa.Endpoint
	UpdateGrpsioServiceEndpoint           goa.Endpoint
	DeleteGrpsioServiceEndpoint           goa.Endpoint
	CreateGrpsioMailingListEndpoint       goa.Endpoint
	GetGrpsioMailingListEndpoint          goa.Endpoint
	UpdateGrpsioMailingListEndpoint       goa.Endpoint
	DeleteGrpsioMailingListEndpoint       goa.Endpoint
	CreateGrpsioMailingListMemberEndpoint goa.Endpoint
	GetGrpsioMailingListMemberEndpoint    goa.Endpoint
	UpdateGrpsioMailingListMemberEndpoint goa.Endpoint
	DeleteGrpsioMailingListMemberEndpoint goa.Endpoint
	GroupsioWebhookEndpoint               goa.Endpoint
}

// NewClient initializes a "mailing-list" service client given the endpoints.
func NewClient(livez, readyz, createGrpsioService, getGrpsioService, updateGrpsioService, deleteGrpsioService, createGrpsioMailingList, getGrpsioMailingList, updateGrpsioMailingList, deleteGrpsioMailingList, createGrpsioMailingListMember, getGrpsioMailingListMember, updateGrpsioMailingListMember, deleteGrpsioMailingListMember, groupsioWebhook goa.Endpoint) *Client {
	return &Client{
		LivezEndpoint:                         livez,
		ReadyzEndpoint:                        readyz,
		CreateGrpsioServiceEndpoint:           createGrpsioService,
		GetGrpsioServiceEndpoint:              getGrpsioService,
		UpdateGrpsioServiceEndpoint:           updateGrpsioService,
		DeleteGrpsioServiceEndpoint:           deleteGrpsioService,
		CreateGrpsioMailingListEndpoint:       createGrpsioMailingList,
		GetGrpsioMailingListEndpoint:          getGrpsioMailingList,
		UpdateGrpsioMailingListEndpoint:       updateGrpsioMailingList,
		DeleteGrpsioMailingListEndpoint:       deleteGrpsioMailingList,
		CreateGrpsioMailingListMemberEndpoint: createGrpsioMailingListMember,
		GetGrpsioMailingListMemberEndpoint:    getGrpsioMailingListMember,
		UpdateGrpsioMailingListMemberEndpoint: updateGrpsioMailingListMember,
		DeleteGrpsioMailingListMemberEndpoint: deleteGrpsioMailingListMember,
		GroupsioWebhookEndpoint:               groupsioWebhook,
	}
}

// Livez calls the "livez" endpoint of the "mailing-list" service.
func (c *Client) Livez(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.LivezEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}

// Readyz calls the "readyz" endpoint of the "mailing-list" service.
// Readyz may return the following errors:
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) Readyz(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.ReadyzEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}

// CreateGrpsioService calls the "create-grpsio-service" endpoint of the
// "mailing-list" service.
// CreateGrpsioService may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request - Invalid type, missing required fields, or validation failures
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateGrpsioService(ctx context.Context, p *CreateGrpsioServicePayload) (res *GrpsIoServiceFull, err error) {
	var ires any
	ires, err = c.CreateGrpsioServiceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GrpsIoServiceFull), nil
}

// GetGrpsioService calls the "get-grpsio-service" endpoint of the
// "mailing-list" service.
// GetGrpsioService may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetGrpsioService(ctx context.Context, p *GetGrpsioServicePayload) (res *GetGrpsioServiceResult, err error) {
	var ires any
	ires, err = c.GetGrpsioServiceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetGrpsioServiceResult), nil
}

// UpdateGrpsioService calls the "update-grpsio-service" endpoint of the
// "mailing-list" service.
// UpdateGrpsioService may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateGrpsioService(ctx context.Context, p *UpdateGrpsioServicePayload) (res *GrpsIoServiceWithReadonlyAttributes, err error) {
	var ires any
	ires, err = c.UpdateGrpsioServiceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GrpsIoServiceWithReadonlyAttributes), nil
}

// DeleteGrpsioService calls the "delete-grpsio-service" endpoint of the
// "mailing-list" service.
// DeleteGrpsioService may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteGrpsioService(ctx context.Context, p *DeleteGrpsioServicePayload) (err error) {
	_, err = c.DeleteGrpsioServiceEndpoint(ctx, p)
	return
}

// CreateGrpsioMailingList calls the "create-grpsio-mailing-list" endpoint of
// the "mailing-list" service.
// CreateGrpsioMailingList may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request - Invalid data, missing required fields, or validation failures
//   - "NotFound" (type *NotFoundError): Parent service not found or committee not found
//   - "Conflict" (type *ConflictError): Mailing list with same name already exists
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateGrpsioMailingList(ctx context.Context, p *CreateGrpsioMailingListPayload) (res *GrpsIoMailingListFull, err error) {
	var ires any
	ires, err = c.CreateGrpsioMailingListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GrpsIoMailingListFull), nil
}

// GetGrpsioMailingList calls the "get-grpsio-mailing-list" endpoint of the
// "mailing-list" service.
// GetGrpsioMailingList may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Mailing list not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetGrpsioMailingList(ctx context.Context, p *GetGrpsioMailingListPayload) (res *GetGrpsioMailingListResult, err error) {
	var ires any
	ires, err = c.GetGrpsioMailingListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetGrpsioMailingListResult), nil
}

// UpdateGrpsioMailingList calls the "update-grpsio-mailing-list" endpoint of
// the "mailing-list" service.
// UpdateGrpsioMailingList may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Mailing list not found
//   - "Conflict" (type *ConflictError): Conflict - ETag mismatch or validation failure
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateGrpsioMailingList(ctx context.Context, p *UpdateGrpsioMailingListPayload) (res *GrpsIoMailingListWithReadonlyAttributes, err error) {
	var ires any
	ires, err = c.UpdateGrpsioMailingListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GrpsIoMailingListWithReadonlyAttributes), nil
}

// DeleteGrpsioMailingList calls the "delete-grpsio-mailing-list" endpoint of
// the "mailing-list" service.
// DeleteGrpsioMailingList may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Mailing list not found
//   - "Conflict" (type *ConflictError): Conflict - ETag mismatch or deletion not allowed
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteGrpsioMailingList(ctx context.Context, p *DeleteGrpsioMailingListPayload) (err error) {
	_, err = c.DeleteGrpsioMailingListEndpoint(ctx, p)
	return
}

// CreateGrpsioMailingListMember calls the "create-grpsio-mailing-list-member"
// endpoint of the "mailing-list" service.
// CreateGrpsioMailingListMember may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Mailing list not found
//   - "Conflict" (type *ConflictError): Member already exists
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateGrpsioMailingListMember(ctx context.Context, p *CreateGrpsioMailingListMemberPayload) (res *GrpsIoMemberFull, err error) {
	var ires any
	ires, err = c.CreateGrpsioMailingListMemberEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GrpsIoMemberFull), nil
}

// GetGrpsioMailingListMember calls the "get-grpsio-mailing-list-member"
// endpoint of the "mailing-list" service.
// GetGrpsioMailingListMember may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Member not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetGrpsioMailingListMember(ctx context.Context, p *GetGrpsioMailingListMemberPayload) (res *GetGrpsioMailingListMemberResult, err error) {
	var ires any
	ires, err = c.GetGrpsioMailingListMemberEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetGrpsioMailingListMemberResult), nil
}

// UpdateGrpsioMailingListMember calls the "update-grpsio-mailing-list-member"
// endpoint of the "mailing-list" service.
// UpdateGrpsioMailingListMember may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request - Invalid data or immutable field modification
//   - "NotFound" (type *NotFoundError): Member not found
//   - "Conflict" (type *ConflictError): Conflict - ETag mismatch or validation failure
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateGrpsioMailingListMember(ctx context.Context, p *UpdateGrpsioMailingListMemberPayload) (res *GrpsIoMemberWithReadonlyAttributes, err error) {
	var ires any
	ires, err = c.UpdateGrpsioMailingListMemberEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GrpsIoMemberWithReadonlyAttributes), nil
}

// DeleteGrpsioMailingListMember calls the "delete-grpsio-mailing-list-member"
// endpoint of the "mailing-list" service.
// DeleteGrpsioMailingListMember may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request - Cannot remove sole owner
//   - "NotFound" (type *NotFoundError): Member not found
//   - "Conflict" (type *ConflictError): Conflict - ETag mismatch
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteGrpsioMailingListMember(ctx context.Context, p *DeleteGrpsioMailingListMemberPayload) (err error) {
	_, err = c.DeleteGrpsioMailingListMemberEndpoint(ctx, p)
	return
}

// GroupsioWebhook calls the "groupsio-webhook" endpoint of the "mailing-list"
// service.
// GroupsioWebhook may return the following errors:
//   - "BadRequest" (type *BadRequestError): Invalid webhook payload or signature
//   - "Unauthorized" (type *UnauthorizedError): Invalid webhook signature
//   - error: internal error
func (c *Client) GroupsioWebhook(ctx context.Context, p *GroupsioWebhookPayload) (err error) {
	_, err = c.GroupsioWebhookEndpoint(ctx, p)
	return
}
